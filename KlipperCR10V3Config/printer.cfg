[include fluidd.cfg]


[duplicate_pin_override]
pins:PK7

[include PI-MCU.cfg]

[include Menu.cfg]

[include G-Code-Macros.cfg]

[virtual_sdcard]
path: /home/Ericmil8/printer_data/gcodes
on_error_gcode: CANCEL_PRINT

[printer]
kinematics: cartesian
max_z_velocity: 14 #5
max_z_accel: 100
max_velocity: 400
max_accel: 1800
max_accel_to_decel: 1800
square_corner_velocity: 1


[input_shaper]
shaper_freq_x: 25.0
shaper_freq_y: 25.0 ;Accelerometer
shaper_type: mzv
damping_ratio_x: 0.1
damping_ratio_y: 0.1

[firmware_retraction]
retract_length: 0.4
retract_speed: 80
unretract_extra_length: .01
unretract_speed: 80


[idle_timeout]
gcode:
    SET_HEATER_TEMPERATURE HEATER=extruder 
    SET_HEATER_TEMPERATURE HEATER=heater_bed 
    M18
timeout: 1200

[extruder]
step_pin: PA4
dir_pin: !PA6
enable_pin: !PA2
microsteps: 16
full_steps_per_rotation: 200
#rotation_distance: 8
rotation_distance: 7.7201944 
# 16 microsteps * 200 steps/rotation / steps/mm
nozzle_diameter: 0.400
filament_diameter: 1.750
heater_pin: PB4
sensor_type: EPCOS 100K B57560G104F
sensor_pin: PK5
min_temp: 5
max_temp: 275
#max_temp: 255
control: pid
pid_kp = 21.703
pid_ki = 1.104
pid_kd = 106.614
max_extrude_only_distance = 100.00 
pressure_advance = 0.2443

# ASA
#https://www.klipper3d.org/Pressure_Advance.html?h=pressur#tuning-pressure-advance


[stepper_x]
step_pin: PF0 ;step_pin: PF0 #ar54
dir_pin: PF1 ;dir_pin: PF1 #ar55
enable_pin: !PD7  ;enable_pin: !PD7 #!ar38
microsteps: 16
rotation_distance: 39.66941833
endstop_pin: ^PE5
position_endstop: 0
position_max: 309
homing_speed: 80
second_homing_speed: 2.5
position_endstop: -2.1
position_min: -2.1



[stepper_y]
step_pin: PF6
dir_pin: PF7
enable_pin: !PF2
microsteps: 16
rotation_distance: 39.16
endstop_pin: ^PJ1
position_endstop: 0
position_max: 319
homing_speed: 80 ;{200*60}  #define HOMING_FEEDRATE_MM_M { (80*60), (80*60), (10*60) }
second_homing_speed: 2.5
position_endstop: -0.5
position_min: -0.5
#define DEFAULT_MAX_FEEDRATE          { 200, 200, 14, 25 }
#   Velocity (in mm/s) of the stepper when performing the second home.
#   The default is homing_speed/2.

[stepper_z]
step_pin: PL3
dir_pin: !PL1
enable_pin: !PK0
microsteps: 16
rotation_distance: 7.928
endstop_pin: ^PD3
position_endstop: 0.25
position_min: -1
position_max: 399
homing_speed: 10
second_homing_speed: 2.5
#second_homing_speed:
#   Velocity (in mm/s) of the stepper when performing the second home.
#   The default is homing_speed/2.



[heater_bed]
heater_pin: PH5
sensor_type: ATC Semitec 104GT-2
#sensor_type: EPCOS 100K B57560G104F
sensor_pin: PK6
min_temp: 5
max_temp: 130
control: pid
pid_kp = 74.976
pid_ki = 1.754
pid_kd = 801.310


[bed_screws]
screw1: 32,35
screw1_name: Front Left
screw2: 271,35
screw2_name: Front Right
screw3: 271,271
screw3_name: Back Right
screw4: 32,271
screw4_name: Back Left
horizontal_move_z: 5
probe_height: 0.20
speed: 75
probe_speed: 5






# An arc will be split into segments. Each segment's length will
# equal the resolution in mm set above. Lower values will produce a
# finer arc, but also more work for your machine. Arcs smaller than
# the configured value will become straight lines. The default is
# 1mm.


[fan]
pin: PH6

[mcu]
serial: /dev/serial/by-id/usb-1a86_USB_Serial-if00-port0
#   The serial port to connect to the MCU. If unsure (or if it
#   changes) see the "Where's my serial port?" section of the FAQ.
#   This parameter must be provided when using a serial port.
baud: 250000
#   The baud rate to use. The default is 250000.
#canbus_uuid:
#   If using a device connected to a CAN bus then this sets the unique
#   chip identifier to connect to. This value must be provided when using
#   CAN bus for communication.
#canbus_interface:
#   If using a device connected to a CAN bus then this sets the CAN
#   network interface to use. The default is 'can0'.
;restart_method: arduino
#   This controls the mechanism the host will use to reset the
#   micro-controller. The choices are 'arduino', 'cheetah', 'rpi_usb',
#   and 'command'. The 'arduino' method (toggle DTR) is common on
#   Arduino boards and clones. The 'cheetah' method is a special
#   method needed for some Fysetc Cheetah boards. The 'rpi_usb' method
#   is useful on Raspberry Pi boards with micro-controllers powered
#   over USB - it briefly disables power to all USB ports to
#   accomplish a micro-controller reset. The 'command' method involves
#   sending a Klipper command to the micro-controller so that it can
#   reset itself. The default is 'arduino' if the micro-controller
#   communicates over a serial port, 'command' otherwise.




######################################################################
# 128x64 Full Graphic Creality CR10 / ENDER 3 stockdisplay
######################################################################

# This section is used for a Creality "12864" display with a single
# ribbon cable between the display's EXP3 plug and the
# micro-controller board's EXP1 connector.



# Common EXP1 / EXP2 (display) pins Generic Ramps
[board_pins]
aliases:
    # Common EXP1 header found on many "all-in-one" ramps clones
	#FLIPPED CABLE
	EXP1_1=<5V>,    EXP1_3=PA7,    EXP1_5=PA3,	EXP1_7=PH1,	EXP1_9=PC2,
	EXP1_2=<GND>,	EXP1_4=PA5,	EXP1_6=PA1,	EXP1_8=PH0,	EXP1_10=PC0,
    # EXP2 header
	EXP2_1=<RST>,	EXP2_3=PG0,	EXP2_5=PB2,	EXP2_7=PB0,	EXP2_9=PB1,
	EXP2_2=<GND>,	EXP2_4=PL0,	EXP2_6=PC4,	EXP2_8=PC6,	EXP2_10=PB3
    # Pins EXP2_1, EXP2_6, EXP2_2 are also MISO, MOSI, SCK of bus "spi"
    # Note, some boards wire: EXP2_8=<RST>, EXP2_10=PG0


######################################################################
# 128x64 Full Graphic Creality CR10 / ENDER 3 stockdisplay
######################################################################

# This section is used for a Creality "12864" display with a single
# ribbon cable between the display's EXP3 plug and the
# micro-controller board's EXP1 connector.

[display]
lcd_type: st7920
cs_pin: EXP1_7
sclk_pin: EXP1_6
sid_pin: EXP1_8
encoder_pins: ^EXP2_6, ^EXP2_8
click_pin: ^!EXP1_9

[output_pin beeper]
pin: EXP1_10
pwm: True
#   A piezo beeper needs a PWM signal, a DC buzzer doesn't.
value: 0
#   Silent at power on, set to 1 if active low.
shutdown_value: 0
#   Disable at emergency shutdown (no PWM would be available anyway).
cycle_time: 0.001
#   Default PWM frequency : 0.001 = 1ms will give a tone of 1kHz
#   Although not pitch perfect.


 
[gcode_arcs]
resolution: 0.1

[pause_resume]
recover_velocity: 50

[filament_switch_sensor fil_runout_sensor]
pause_on_runout: True
switch_pin: PE4 #ar2


[adxl345]
cs_pin: Rpi:None
;cs_pin: Rpi:gpio8

[resonance_tester]
accel_chip: adxl345


probe_points:
    150, 150, 20  # an example


# Example2: Using the i2c bus of the RPi to read a sensor

# Example 3:Using a pin on another gpiochip connected to the RPi
# (in this case on an MCP23017)
#[fan]
#pin: host:gpiochip2/gpio7





















